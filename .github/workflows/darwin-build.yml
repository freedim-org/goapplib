name: Build Dynamic Library for Darwin

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Golang
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
        id: go

      - name: Set active Xcode path
        run: |
          XCODE_VERSION=15.0
          sudo xcode-select -s /Applications/Xcode_$XCODE_VERSION.app/Contents/Developer

      - name: Build
        run: |
          go env
          export CGO_ENABLED=1
          go build -buildmode=c-shared -ldflags="-s -w" -o goapplib.macos.x86_64.dylib ./cmd/cgo/main.go
          echo "Build MacOS x86_64 Done"
          
          GOARCH=arm64
          go build -buildmode=c-shared -ldflags="-s -w" -o goapplib.macos.arm64.dylib ./cmd/cgo/main.go
          echo "Build MacOS arm64 Done"
          
          lipo -create -output goapplib.macos.universal.dylib goapplib.macos.x86_64.dylib goapplib.macos.arm64.dylib
          
          GOOS=ios
          GOARCH=arm64
          go build -buildmode=c-archive -ldflags="-s -w" -o goapplib.ios.arm64.a ./cmd/cgo/main.go

      - name: Get Version
        id: get_version_darwin
        run: |
          version=$(go run cmd/version/main.go)
          echo "::set-output name=version::${version}-darwin"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.get_version_darwin.outputs.version }}
          release_name: ${{ steps.get_version_darwin.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload MacOS x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./goapplib.macos.x86_64.so
          asset_name: goapplib.macos.x86_64.so
          asset_content_type: application/octet-stream

      - name: Upload MacOS arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./goapplib.macos.arm64.so
          asset_name: goapplib.macos.arm64.so
          asset_content_type: application/octet-stream

      - name: Upload MacOS universal
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./goapplib.macos.universal.so
          asset_name: goapplib.macos.universal.so
          asset_content_type: application/octet-stream

      - name: Upload iOS arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./goapplib.ios.arm64.a
          asset_name: goapplib.ios.arm64.a
          asset_content_type: application/octet-stream
